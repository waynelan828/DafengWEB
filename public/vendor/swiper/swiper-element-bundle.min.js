(function(){
  if(typeof window==="undefined")return;
  if(customElements.get("swiper-container"))return;
  class SwiperSlide extends HTMLElement{}
  class SwiperContainer extends HTMLElement{
    constructor(){
      super();
      this._current=0;
      this._slides=[];
      this._loop=true;
      this._autoplayDelay=0;
      this._autoplayTimer=null;
      this._pauseOnMouseEnter=false;
      this._paginationBullets=[];
      this._paginationEl=null;
      this._prevEl=null;
      this._nextEl=null;
      this._prevHandler=null;
      this._nextHandler=null;
      this._onMouseEnter=this._onMouseEnter.bind(this);
      this._onMouseLeave=this._onMouseLeave.bind(this);
      this._onVisibilityChange=this._onVisibilityChange.bind(this);
    }
    connectedCallback(){
      this._loop=this.getAttribute("loop")!=="false";
      this._effect=this.getAttribute("effect")||"";
      if(this._effect)this.dataset.effect=this._effect;
      this._slides=this._collectSlides();
      if(!this._slides.length)return;
      this.setAttribute("aria-live",this.getAttribute("autoplay-delay")?"off":"polite");
      this.setAttribute("role","group");
      this._slides.forEach((slide,index)=>{
        slide.setAttribute("role","group");
        slide.setAttribute("aria-roledescription","slide");
        slide.setAttribute("aria-label",`${index+1} / ${this._slides.length}`);
      });
      this._setupPagination();
      this._setupNavigation();
      this.slideTo(this._current,false,true);
      this.classList.add("swiper-initialized");
      this._initAutoplay();
      document.addEventListener("visibilitychange",this._onVisibilityChange);
    }
    disconnectedCallback(){
      this._teardownAutoplay();
      if(this._pauseOnMouseEnter){
        this.removeEventListener("mouseenter",this._onMouseEnter);
        this.removeEventListener("mouseleave",this._onMouseLeave);
      }
      document.removeEventListener("visibilitychange",this._onVisibilityChange);
      if(this._prevEl&&this._prevHandler)this._prevEl.removeEventListener("click",this._prevHandler);
      if(this._nextEl&&this._nextHandler)this._nextEl.removeEventListener("click",this._nextHandler);
    }
    _collectSlides(){
      return Array.from(this.querySelectorAll("swiper-slide"));
    }
    _setupPagination(){
      if(this.getAttribute("pagination")==="false")return;
      if(this._paginationEl){
        this._paginationEl.remove();
        this._paginationBullets=[];
      }
      this._paginationEl=document.createElement("div");
      this._paginationEl.className="swiper-pagination";
      this.appendChild(this._paginationEl);
      this._paginationBullets=this._slides.map((slide,index)=>{
        const bullet=document.createElement("button");
        bullet.type="button";
        bullet.className="swiper-pagination-bullet";
        bullet.setAttribute("aria-label",`Go to slide ${index+1}`);
        bullet.addEventListener("click",()=>{
          if(this.getAttribute("pagination-clickable")==="false")return;
          this.slideTo(index,true);
        });
        this._paginationEl.appendChild(bullet);
        return bullet;
      });
    }
    _setupNavigation(){
      const prev=this.querySelector(":scope > .swiper-button-prev");
      const next=this.querySelector(":scope > .swiper-button-next");
      this._prevEl=prev||null;
      this._nextEl=next||null;
      this._prevHandler=()=>this.slidePrev(true);
      this._nextHandler=()=>this.slideNext(true);
      if(this._prevEl)this._prevEl.addEventListener("click",this._prevHandler);
      if(this._nextEl)this._nextEl.addEventListener("click",this._nextHandler);
    }
    _initAutoplay(){
      const delayAttr=this.getAttribute("autoplay-delay");
      const delay=delayAttr?parseInt(delayAttr,10):NaN;
      if(!delay||!isFinite(delay)||delay<=0)return;
      this._autoplayDelay=delay;
      this._pauseOnMouseEnter=this.getAttribute("autoplay-pause-on-mouse-enter")==="true";
      if(this._pauseOnMouseEnter){
        this.addEventListener("mouseenter",this._onMouseEnter);
        this.addEventListener("mouseleave",this._onMouseLeave);
      }
      this._restartAutoplay();
    }
    _restartAutoplay(){
      if(!this._autoplayDelay)return;
      this._teardownAutoplay();
      this._autoplayTimer=window.setInterval(()=>this.slideNext(false),this._autoplayDelay);
    }
    _teardownAutoplay(){
      if(this._autoplayTimer){
        clearInterval(this._autoplayTimer);
        this._autoplayTimer=null;
      }
    }
    _onMouseEnter(){
      this._teardownAutoplay();
    }
    _onMouseLeave(){
      this._restartAutoplay();
    }
    _onVisibilityChange(){
      if(document.hidden){
        this._teardownAutoplay();
      }else{
        this._restartAutoplay();
      }
    }
    slideTo(index,fromInteraction=false,initial=false){
      const total=this._slides.length;
      if(!total)return;
      let target=index;
      if(this._loop){
        target=(target%total+total)%total;
      }else{
        target=Math.max(0,Math.min(total-1,target));
      }
      const speed=parseInt(this.getAttribute("speed")||"0",10);
      this.style.setProperty("--swiper-transition-duration",`${isFinite(speed)&&speed>0?speed:0}ms`);
      if(!initial&&target===this._current)return;
      this._current=target;
      this._slides.forEach((slide,idx)=>{
        slide.classList.toggle("swiper-slide-active",idx===this._current);
        slide.classList.toggle("swiper-slide-prev",idx===((this._current-1+total)%total));
        slide.classList.toggle("swiper-slide-next",idx===((this._current+1)%total));
        slide.setAttribute("aria-hidden",idx===this._current?"false":"true");
        slide.style.transitionDuration=`${isFinite(speed)&&speed>0?speed:0}ms`;
      });
      if(this._paginationBullets.length){
        this._paginationBullets.forEach((bullet,idx)=>{
          bullet.classList.toggle("swiper-pagination-bullet-active",idx===this._current);
        });
      }
      if(fromInteraction){
        if(this.getAttribute("autoplay-disable-on-interaction")==="false"){
          this._restartAutoplay();
        }else{
          this._teardownAutoplay();
        }
      }else if(!initial){
        this._restartAutoplay();
      }
    }
    slideNext(fromInteraction=false){
      this.slideTo(this._current+1,fromInteraction);
    }
    slidePrev(fromInteraction=false){
      this.slideTo(this._current-1,fromInteraction);
    }
  }
  customElements.define("swiper-slide",SwiperSlide);
  customElements.define("swiper-container",SwiperContainer);
})();
